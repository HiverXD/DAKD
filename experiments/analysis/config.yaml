project:
  name: z_store_v1
  out_root: runs/z_store            # 산출물 루트 (HDF5/로그/매니페스트)

data:
  datasets: ["cifar10", "tiny_imagenet"]   # src/data/data_setup.py 기준 이름
  splits: ["train", "valid"]
  max_per_split: 1000                      # split당 최대 수집수
  class_balanced: true                     # 클래스 균등: 1000 / num_classes
  dataloader:
    batch_size: 128
    num_workers: 4
    pin_memory: true
    shuffle: false                         # 인덱스 일관성 유지
  # src/data/data_setup.py를 그대로 쓰되 augment는 꺼진 상태로 사용

models:
  teacher:
    arch: resnet34
    # runs/01_baseline_test/{dataset}/teacher/finetune/checkpoints/best.pt
    ckpt_tpl: "runs/01_baseline_test/{dataset}/teacher/finetune/checkpoints/best.pt"
    tap_blocks_1based: [2, 4, 6, 8]        # BasicBlock 순번(1-based)
  student:
    arch: resnet18
    ckpt_tpl: "runs/01_baseline_test/{dataset}/student/finetune/checkpoints/best.pt"
    tap_blocks_1based: [1, 2, 3, 4]
  student_kd:
    arch: resnet18
    ckpt_tpl: "runs/02_soft_kd/{dataset}/checkpoints/best.pt"
    tap_blocks_1based: [1, 2, 3, 4]
  student_rkd:
    arch: resnet18
    ckpt_tpl: "runs/03_relational_kd/{dataset}/checkpoints/best.pt"
    tap_blocks_1based: [1, 2, 3, 4]

transforms:
  aap:
    enabled: true
    l2_normalize: true                    # (B,C,H,W)->(B,C) 후 샘플별 L2
  at:
    enabled: true
    reduce: "sum_sq"                      # {sum_sq | sum_abs}
    resize_policy: "teacher"              # {teacher | larger | fixed}
    fixed_hw: null                        # resize_policy=fixed일 때 (H,W)
    l2_normalize: true                    # flatten 후 샘플별 L2
  mhrp:
    enabled: true
    k: 256                                # 공통공간 차원
    heads: 4                              # config.py에도 같은 값
    seeds: [1, 2, 3, 4]                   # head별 시드(공통)
    agg: "mean"                           # {mean | concat}
    from: "aap"                           # GAP 결과를 입력으로 사용
    pre_norm: true                        # GAP 결과 L2 후 투영
    post_norm: true                       # 투영 결과 L2
    store_Q: false                        # true면 Q도 HDF5에 저장
    qr_mode: "reduced"                    # QR 분해 모드 고정(재현성 도움)
    sign_correction: "diag"               # R 대각 부호 교정 방식을 명시

storage:
  format: "hdf5"
  # dataset/split 별로 파일 분리 → 동시 접근/버전관리 쉬움
  h5_path_tpl: "runs/z_store/{dataset}_{split}.h5"
  compression: "gzip"
  chunk_rows: 256                         # (rows, dim) 중 rows chunk
  write_interval_batches: 1               # 매 배치 즉시 append(크래시 안전)
  manifest:
    write_csv: true
    path: "runs/z_store/manifest.csv"     # 선택(필요시 parquet로도 별도 덤프)

save:
  logits: true                            # 최종 logits 저장 (N, C_cls)
  margin: true                            # 정답-최대오답 마진 저장 (N,)
  prototypes:
    enabled: true
    styles: ["aap", "at", "mhrp"]         # μ_{c,ℓ} 저장
  idx_hash: false                         # 이미지 텐서 해시 저장(검증용, 옵션)

compute:
  device: "cuda"
  amp: true
  fp16_store: true
  deterministic: false                    # cudnn.deterministic 등(옵션)
  seed: 42

logging:
  every_n_batches: 10
  sanity_print_shapes: true
